# Lua Configuration Example
# ------------------------------------------------------------------------------
# A simple example demonstrating how to use Lua to extend Vector. Lua is
# powerful embedded runtime that enables you to write script to process data
# flowing through Vector. More information can be found in the docs:
# https://docs.vectorproject.io/usage/configuration/transforms/lua

data_dir = "/var/lib/vector"

# Ingests Apache 2 log data by tailing one or more log files
# Example: 194.221.90.140 - - [22/06/2019:11:55:14 -0400] "PUT /integrate" 100 2213
# Docs: https://docs.vectorproject.io/usage/configuration/sources/file
[sources.apache_logs]
  type         = "file"
  include      = ["/var/log/apache2/*.log"]
  ignore_older = 86400 # 1 day

# Process the data with Lua
# Docs: https://docs.vectorproject.io/usage/configuration/transforms/lua
[transforms.my_lua_transform]
  type = "lua"
  inputs = ["apache_logs"]
  search_dirs = ["/etc/vector/lua"]
  source = """
  require("script") # a `script.lua` file must be in your `search_dirs`

  # Add the current hostname to each event
  if event["host"] == nil then
    local f = io.popen ("/bin/hostname")
    local hostname = f:read("*a") or ""
    f:close()
    hostname = string.gsub(hostname, "\n$", "")
    event["host"] = hostname
  end
  """

# Print the data to STDOUT for inspection
# Docs: https://docs.vectorproject.io/usage/configuration/sinks/console
[sinks.out]
  inputs       = ["apache_parser"] # don't sample
  type         = "console"