# Do not edit!
# This file is generated
# - by "scripts/helm-snapshot-tests.sh"
# - for the chart at "distribution/helm/vector-aggregator"
# - with the values from "tests/helm-snapshots/topology_config/vector-aggregator/values.yaml"
---
# Source: vector-aggregator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector-aggregator
  labels:
    helm.sh/chart: vector-aggregator-0.0.0
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: vector-aggregator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-aggregator
  labels:
    helm.sh/chart: vector-aggregator-0.0.0
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  # We leave `vector.toml` file name available to let externally managed config
  # maps to provide it.
  managed.yaml: |
    # Configuration for vector.
    # Docs: https://vector.dev/docs/
    
    data_dir: "/vector-data-dir"
    
    api:
      enabled: false
      address: "0.0.0.0:8686"
      playground: true
    
    log_schema:
      host_key: "host"
      message_key: "message"
      source_type_key: "source_type"
      timestamp_key: "timestamp"
    
    sources:
      source1:
        option1: value1
        option2: value2
        rawConfig: |-
          option = "value"
          arbitrary text
        type: type1
      source2:
        optionA: valueA
        optionB:
          suboption: valueB
        rawConfig: arbitrary text 2
        type: type2
      source3:
        type: type3
    # Accept logs from Vector agents.
      vector:
        address: 0.0.0.0:9000
        type: vector
    
    # Emit internal Vector metrics.
      internal_metrics:
        type: internal_metrics
    
    transforms:
      transform1:
        inputs:
        - input1
        - input2
        option1: value1
        option2: value2
        rawConfig: |-
          option = "value"
          arbitrary text
        type: type1
      transform2:
        inputs:
        - input2
        - input1
        optionA: valueA
        optionB:
          suboption: valueB
        rawConfig: arbitrary text 2
        type: type2
      transform3:
        inputs: []
        type: type3
    sinks:
      sink1:
        inputs:
        - input1
        - input2
        option1: value1
        option2: value2
        rawConfig: |-
          option = "value"
          arbitrary text
        type: type1
      sink2:
        inputs:
        - input2
        - input1
        optionA: valueA
        optionB:
          suboption: valueB
        rawConfig: arbitrary text 2
        type: type2
      sink3:
        inputs: []
        type: type3
    
    # Expose metrics for scraping in the Prometheus format.
      prometheus_sink:
        address: 0.0.0.0:9090
        inputs:
        - internal_metrics
        type: prometheus
---
# Source: vector-aggregator/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: vector-aggregator-headless
  labels:
    helm.sh/chart: vector-aggregator-0.0.0
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
  - port: 9000
    name: vector
    protocol: TCP
  selector:
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
---
# Source: vector-aggregator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vector-aggregator
  labels:
    helm.sh/chart: vector-aggregator-0.0.0
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    name: vector
    protocol: TCP
  selector:
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
---
# Source: vector-aggregator/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vector-aggregator
  labels:
    helm.sh/chart: vector-aggregator-0.0.0
    app.kubernetes.io/name: vector-aggregator
    app.kubernetes.io/instance: vector
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: vector-aggregator-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: vector-aggregator
      app.kubernetes.io/instance: vector
  podManagementPolicy: "Parallel"
  replicas: 1
  template:
    metadata:
      annotations:
        
        checksum/config: 2e32b2eca9854ebc0d3877ff9cb719ac16698a6e976a05151945729a41eb058d
        
      labels:
        app.kubernetes.io/name: vector-aggregator
        app.kubernetes.io/instance: vector
        vector.dev/exclude: "true"
    spec:      
      serviceAccountName: vector-aggregator
      securityContext:
        {}
      containers:
        - name: vector
          securityContext:
            {}
          image: "timberio/vector:0.0.0-debian"
          imagePullPolicy: "IfNotPresent"
          args:
            - --config
            - /etc/vector/*.toml
          env:
            
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
          resources:
            {}
          volumeMounts:
            # Vector data dir mount.
            - name: data-dir
              mountPath: "/vector-data-dir"
            # Vector config dir mount.
            - name: config-dir
              mountPath: /etc/vector
              readOnly: true
            # Extra volumes.
      terminationGracePeriodSeconds: 60
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        # Vector will store it's data here.
        - name: data-dir
          emptyDir: {}
        # Vector config dir.
        - name: config-dir
          projected:
            sources:
              - configMap:
                  name: vector-aggregator
                  optional: true
  volumeClaimTemplates:
