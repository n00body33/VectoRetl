version: "3"

services:
  minio:
    image: docker.io/minio/minio
    command: server /data
  createbuckets:
    image: docker.io/minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "/usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin; /usr/bin/mc rm -r --force myminio/databend; /usr/bin/mc mb myminio/databend; exit 0;"
  databend:
    image: docker.io/datafuselabs/databend
    environment:
      - QUERY_DEFAULT_USER=vector
      - QUERY_DEFAULT_PASSWORD=vector
      - QUERY_STORAGE_TYPE=s3
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      createbuckets:
        condition: service_completed_successfully
    healthcheck:
      test: "curl -f localhost:8080/v1/health || exit 1"

  runner:
    build:
      context: ${PWD}
      dockerfile: scripts/integration/Dockerfile
      args:
        - RUST_VERSION=${RUST_VERSION}
    working_dir: /code
    command:
      - "cargo"
      - "nextest"
      - "run"
      - "--no-fail-fast"
      - "--no-default-features"
      - "--features"
      - "databend-integration-tests"
      - "--lib"
      - "::databend::"
    environment:
      - DATABEND_ENDPOINT=http://databend:8000
      - DATABEND_USER=vector
      - DATABEND_PASSWORD=vector
    depends_on:
      databend:
        condition: service_healthy
    volumes:
      - ${PWD}:/code
      - target:/code/target
      - cargogit:/usr/local/cargo/git
      - cargoregistry:/usr/local/cargo/registry

volumes:
  target: {}
  cargogit: {}
  cargoregistry: {}
