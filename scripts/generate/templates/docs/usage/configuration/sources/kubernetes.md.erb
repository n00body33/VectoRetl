# <% component = metadata.sources.kubernetes %>

<%= component_header(component) %>

## Example

{% code-tabs %}
{% code-tabs-item title="log" %}
```javascript
{
    "host": "vector-agent-rmqbn",
    "message": "<188>1 2019-10-16T17:50:44.216Z forwardproductize.info quisquam 1693 ID830 - Use the digital ADP capacitor, then you can calculate the solid state capacitor!\n",
    "stream": "stdout",
    "pod_uid": "default_flog-f8dd5f7b-tvgfn_52cdc270-c3e6-4769-b0a9-275481502618",
    "container_name": "flog",
    "timestamp": "2019-10-16T17:51:10.244625907Z"
}
```

<%= component_config_example(component) %>

## Options

<%= options_sections(component.specific_options_list, depth: 3) %>

## How It Works [[sort]]

### Deployment

The `kubernetes` source is designed to be deployed to a Kubernetes cluster as a
[`DaemonSet`][urls.kubernetes_daemonset]. You can find an [example config] in the
`vector` repository. At a high level the `kubernetes` source will run an agent on
each node and will internally use the file source to collect logs from `/var/log/pods`
and a few other locations that Kubernetes places logs into. Via the [`DaemonSet`][urls.kubernetes_daemonset]
Kubernetes will ensure that there is always a copy of the agent running on each node.

### Metadata

Each event will contain a `message` field that contains the direct output from the containers stdout/stderr. There
will also be other fields included that come from Kubernetes. These fields include `host`, `stream`, `pod_uid`,
`container_name` and `timestamp`.

<%= component_sections(component) %>

## Troubleshooting

<%= component_troubleshooting(component) %>

## Resources

<%= component_resources(component) %>
