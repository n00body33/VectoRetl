[transforms.tag_cardinality_limit]
title = "Tag Cardinality Limit"
allow_you_to_description = "limit the cardinality of tags"
beta = false
common = false
function_category = "filter"
input_types = ["metric"]
output_types = ["metric"]
requirements = {}

<%= render("_partials/_component_options.toml", type: "transform", name: "tag_cardinality_limit") %>

[transforms.tag_cardinality_limit.options.value_limit]
type = "int"
common = true
default = 500
examples = [500]
description = "How many distinct values to accept for any given key."

[transforms.tag_cardinality_limit.options.limit_exceeded_action]
type = "string"
common = true
default = "drop_tag"
description = """\
Controls what should happen when a metric comes in with a tag that would \
exceed the configured limit on cardinality.\
"""

[transforms.tag_cardinality_limit.options.limit_exceeded_action.enum]
drop_tag = "Remove tags that would exceed the configured limit from the incoming metric"
drop_event = "Drop any metric events that contain tags that would exceed the configured limit"

[transforms.tag_cardinality_limit.options.mode]
type = "string"
common = true
required = true
description = """\
Controls what approach is used internally to keep track of previously seen \
tags and deterime when a tag on an incoming metric exceeds the limit.\
"""

[transforms.tag_cardinality_limit.options.mode.enum]
exact = """\
Has higher memory requirements than `probabilistic`, but never falsely outputs \
metrics with new tags after the limit has been hit.\
"""
probabilistic = """\
Has lower memory requirements than `exact`, but may occassionally allow \
metric events to pass through the transform even when they contain new tags \
that exceed the configured limit.  The rate at which this happens can be \
controlled by changing the value of `cache_size_per_tag`.\
"""

[transforms.tag_cardinality_limit.options.cache_size_per_tag]
type = "int"
common = true
default = 5120000
unit = "bytes"
relevant_when = {mode = "probabilistic"}
description = """\
The size of the cache in bytes to use to detect duplicate tags. The bigger the \
cache the less likely it is to have a 'false positive' or a case where we allow \
a new value for tag even after we have reached the configured limits.\
"""
