<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bb4921f1-5f27-4fd9-951a-e62f3876fc5d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/website/cue/reference/remap/functions/contains_all.cue" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/website/cue/reference/remap/functions/parse_float.cue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.lock" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/DEPRECATIONS.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/DEPRECATIONS.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/codecs/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/codecs/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/codecs/tests/data/native_encoding/vector_generate_fixtures.patch" beforeDir="false" afterPath="$PROJECT_DIR$/lib/codecs/tests/data/native_encoding/vector_generate_fixtures.patch" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/file-source/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/file-source/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/prometheus-parser/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/prometheus-parser/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/vector-common/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/vector-common/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/vector-config/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/vector-config/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/vector-core/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/vector-core/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/vector-vrl/tests/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/lib/vector-vrl/tests/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/app.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cli.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/cli.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/builder.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/builder.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/compiler.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/compiler.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/loading/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/loading/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/validation.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/validation.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/transforms/metric_metadata.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/transforms/metric_metadata.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/website/cue/reference/cli.cue" beforeDir="false" afterPath="$PROJECT_DIR$/website/cue/reference/cli.cue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/website/cue/reference/remap.cue" beforeDir="false" afterPath="$PROJECT_DIR$/website/cue/reference/remap.cue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/website/cue/reference/remap/functions/from_unix_timestamp.cue" beforeDir="false" afterPath="$PROJECT_DIR$/website/cue/reference/remap/functions/from_unix_timestamp.cue" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="3g26puhx" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2XdOLb1sSc7LW9s8GQvu2XkgFlc" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "Merging metrics-metadata",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "yarn",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "settings.editor.selected.configurable": "language.rust.cargo.check",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
  </component>
  <component name="RunManager" selected="Cargo.Test metric_metadata">
    <configuration name="Test metric_metadata" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package vector --lib transforms::metric_metadata" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test transforms::metric_metadata::tests::transform_distribution_summary" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package vector --lib transforms::metric_metadata::tests::transform_distribution_summary -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test metric_metadata" />
        <item itemvalue="Cargo.Test transforms::metric_metadata::tests::transform_distribution_summary" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bb4921f1-5f27-4fd9-951a-e62f3876fc5d" name="Changes" comment="" />
      <created>1698955434788</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698955434788</updated>
      <workItem from="1698955436279" duration="3692000" />
      <workItem from="1698959454881" duration="3232000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/transforms/metric_metadata.rs</url>
          <line>441</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>