{{ if .Values.loadBalancer.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector-haproxy
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-haproxy
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
data:
  haproxy.cfg: |
    global
      log stdout local0
      maxconn 4096
      stats socket /tmp/haproxy

    defaults
      log     global
      option  dontlognull
      retries 3
      option  redispatch
      timeout client 5s
      timeout server 5s
      timeout connect 5s

    resolvers coredns
      nameserver dns1 kube-dns.kube-system.svc.{{ .Values.loadBalancer.clusterDomain }}:53
      resolve_retries 3
      timeout resolve 2s
      timeout retry 1s
      accepted_payload_size 8192
      hold valid 10s
      hold obsolete 60s

    frontend datadog-logs
      bind *:3837
      mode http
      option httplog
      default_backend datadog-logs

    backend datadog-logs
      mode http
      balance roundrobin
      option tcp-check
      server-template srv 5 _datadog-logs._tcp.vector-aggregator-headless.{{ .Release.Namespace }}.svc.{{ .Values.loadBalancer.clusterDomain }} resolvers coredns check

    frontend syslog
      bind *:5140
      default_backend syslog

    backend syslog
      balance roundrobin
      option tcp-check
      server-template srv 5 _syslog._tcp.vector-aggregator-headless.{{ .Release.Namespace }}.svc.{{ .Values.loadBalancer.clusterDomain }} resolvers coredns check

    frontend vector
      bind *:9000 proto h2
      mode http
      option httplog
      default_backend vector

    backend vector
      mode http
      balance roundrobin
      option tcp-check
      server-template srv 5 _vector._tcp.vector-aggregator-headless.{{ .Release.Namespace }}.svc.{{ .Values.loadBalancer.clusterDomain }} resolvers coredns proto h2 check

    frontend stats
      mode http
      bind *:1024
      http-request use-service prometheus-exporter if { path /metrics }
      stats enable
      stats uri /stats
      stats refresh 10s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vector-haproxy
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "libvector.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: load-balancer
  template:
    metadata:
      labels:
        {{- include "libvector.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: load-balancer
    spec:
      serviceAccountName: vector-haproxy
      containers:
      - name: haproxy
        image: haproxy:2.4.0-alpine
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/haproxy/
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: vector-haproxy
---
apiVersion: v1
kind: Service
metadata:
  name: vector
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
spec:
  selector:
    {{- include "libvector.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
  ports:
  - name: datadog
    port: 3837
    protocol: TCP
    targetPort: 3837
  - name: metrics
    port: 1024
    protocol: TCP
    targetPort: 1024
  - name: syslog
    port: 5140
    protocol: TCP
    targetPort: 5140
  - name: vector
    port: 9000
    protocol: TCP
    targetPort: 9000
{{- end }}
