{{ if .Values.haproxy.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "libvector.fullname" . }}-haproxy
  labels:
    {{- include "libvector.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-balancer
data:
  haproxy.cfg: |
    global
      log stdout local0
      maxconn 4096
      stats socket /tmp/haproxy

    defaults
      log     global
      option  dontlognull
      retries 3
      option  redispatch
      timeout client 5s
      timeout server 5s
      timeout connect 5s

    resolvers coredns
      nameserver dns1 kube-dns.kube-system.svc.{{ .Values.global.clusterDomain }}:53
      resolve_retries 3
      timeout resolve 2s
      timeout retry 1s
      accepted_payload_size 8192
      hold valid 10s
      hold obsolete 60s

    frontend stats
      mode http
      bind *:1024
      http-request use-service prometheus-exporter if { path /metrics }
    {{ if .Values.vectorSource.enabled }}
    frontend vector
      bind *:{{ .Values.vectorSource.listenPort }} proto h2
      mode http
      option httplog
      default_backend vector

    backend vector
      mode http
      balance roundrobin
      option tcp-check
      server-template srv 5 _vector._tcp.{{ include "libvector.fullname" . }}-headless.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }} resolvers coredns proto h2 check
    {{- end }}
    {{ range $item := .Values.service.ports }}
    frontend {{ $item.name }}
      bind *:{{ $item.port }}
      mode http
      option httplog
      default_backend {{ $item.name }}

    backend {{ $item.name }}
      mode http
      balance roundrobin
      option tcp-check
      server-template srv 5 _{{ $item.name }}._tcp.{{ include "libvector.fullname" $ }}-headless.{{ $.Release.Namespace }}.svc.{{ $.Values.global.clusterDomain }} resolvers coredns check
    {{ end }}
{{- end }}
