---
id: unit-testing-vector-config-files
title: "Unit Testing: Treating Your Vector Config Files As Code"
author: Ashley
author_title: Vector Core Team
author_url: https://github.com/jeffail
author_image_url: https://github.com/jeffail.png
tags: ["type: announcement", "domain: config"]
---

Today we're excited to announce support for unit testing your configuration
files! This feature lets you test your Vector configuration files to ensure
they do not regress, a very welcome feature for mission-critical production
pipelines that are managed across multiple engineers.

## Why?

On the surface, Vector configuration files seem like simple instructions to
connect 2 systems. For example, [tailing a file][docs.sources.file] and sending
that data to [AWS CloudWatch Logs][docs.sinks.aws_cloudwatch_logs]. But as you
start to become familiar with Vector you'll start to adding
[transforms][docs.transforms] and important logic to your configuration. After
a while, your Vector configuration files start to look and feel like code. Unit
tests allow you to assert various conditions, ensuring your "code" does not
regress. 

## Getting Started

In order to ensure the information in this post does not go stale, we've put
together 2 documents for you:

1. [A unit testing guide][docs.guides.unit_testing]
2. [Unit testing reference][docs.reference.tests]

These should be everything you need to get started and will be actively
maintained as this feature matures.

## Feedback!

We're eager to hear your feedback! Please note, this feature is in `beta` and
represents the MVP version. As we collect more feedback we'll start to mature
and improve it.
