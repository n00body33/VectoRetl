---
$schema: "/.meta/.schemas/guides.json"
title: <%= guide.action_phrase.capitalize_first.to_json %>
description: "A simple guide to <%= guide.action_phrase %> in just a few minutes."
author_github: https://github.com/binarylogic
cover_label: <%= guide.cover_label.to_json %>
tags: <%= guide.tags.to_json %>
hide_pagination: true
---

<%= guide.events_phrase.capitalize %> are an _essential_ part of observing any
service; without them you are flying blind. But collecting and analyzing them
can be a real challenge -- especially at scale. Not only do you need to solve
the basic task of collecting your <%= guide.events_phrase %>, but you must do it
in a reliable, performant, and robust manner. Nothing is more frustrating than
having your <%= guide.events_phrase %> pipeline fall on it's face during an
outage, or even worse, disrupt more important services!

Fear not! In this guide we'll show you how to send <%= guide.action_phrase %>
and build a <%= guide.events_phrase %> pipeline that will be the backbone of
your observability strategy.

<%- if platform && platform.description -%>
## What is <%= platform.title %>?

<%= platform.description %>

<%- elsif source && source.description -%>
## What is <%= source.title %>?

<%= source.description %>

<%- end -%>
<%- if sink && sink.description -%>
## What is <%= sink.title %>?

<%= sink.description %>

<%- end -%>
## What We'll Accomplish

To be clear, here's everything we'll accomplish in this short guide:

<ol className="list--checks list--flush">
  <%- guide.features.each do |feature| -%>
  <li>
    <%= feature.text %>
    <%- if feature.features.any? -%>
    <ol>
      <%- feature.features.each do |feature| -%>
      <li><%= feature.text %></li>
      <%- end -%>
    </ol>
    <%- end -%>
  </li>
  <%- end -%>
  <li className="list--li--arrow list--li--pink text--bold">All in just a few minutes!</li>
</ol>

## How It Works

We'll be using [Vector][urls.vector_website] to accomplish this task. Vector
is a [popular][urls.vector_stars], lightweight, and
[ultra-fast][urls.vector_performance] utility for building observability
pipelines. It's written in [Rust][urls.rust], making it memory safe and
reliable. We'll be deploying Vector as a
[<%= strategy.name %>][docs.strategies#<%= strategy.name %>].

<%= deployment_strategy(strategy, platform: platform, sink: sink, source: source) %>

## Tutorial

<%= interface_installation_tutorial(interfaces.first, sink: sink, source: source, heading_depth: 3) %>
